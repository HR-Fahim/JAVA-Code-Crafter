

    	/* Here's a breakdown of the regular expression:

		   [ ]: Defines a character class.
		   \\(: Matches the open parenthesis character.
		   \\): Matches the close parenthesis character.
		   \\s: Matches any whitespace character (space, tab, newline).
		   +: Matches one or more occurrences of the characters in the character class.
		   The replaceAll() method replaces all occurrences of brackets and white spaces with an 
    	
    	   .replaceAll("\\s+", "") removes all " "
    	   .replaceAll("[()]", "") remove all brackets using regular expression
    	   .replaceAll("\\s+|!", "") remove spaces and skip '!' symbol using regular expression
    	   .replaceAll("[^a-zA-Z0-9_]+", "") remove spaces and symbols using regular expression
    	   .replaceAll("[\\s,\\.]+", "") remove spaces, commas, and periods using regular expression
		   .replaceAll("[\\(\\)\\[\\]\\{\\}\\s]+", "") remove brackets and white spaces using regular expression
		   .replaceAll("[\\(\\)\\[\\]]", "") remove brackets
 
    	   StringBuilder spacedWord = new StringBuilder(); // Creating StringBuilder Object
    	   spacedWord.append(" "); // Append a space before letters 
    	   spacedWord.append(str.charAt(i)); // Append the current character 
    	   String result = spacedWord.toString(); // Append convert & print
           System.out.println(result); 
           spacedWord.deleteCharAt(x); // To remove char from a word 
           
           Pattern pattern = Pattern.compile("[{}()\\[\\]]"); // Creating Pattern Object
           pattern.matcher(string).replaceAll(""); */


import java.util.*;

public class CamelCase {

    public static void main(String[] args) {
       
    	Scanner input = new Scanner(System.in);
    	
    	String str = input.nextLine();
    	
    	str.toUpperCase().charAt(0);
    	str.toUpperCase().charAt(2);
    	
    	//SMClass SM = new SMClass(str);
    	//CVClass CV = new CVClass(str);
    	//CCClass CC = new CCClass(str);
    	//SCClass SC = new SCClass(str);
    	//CMClass CM = new CMClass(str);
    	SVClass SV = new SVClass(str);

    }
}